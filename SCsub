# SCsub

Import('env')

env_gdppg = env.Clone()
env_gdppg.add_source_files(env.modules_sources, "*.cpp") # Add all cpp files to the build
env_gdppg.Append(CPPPATH=['ppg-yaml/vendor/ppg-core/src', 'ppg-yaml/src', 'ppg-yaml/vendor/yaml-cpp/include']) # this is a path relative to /modules/gdppg/
env_gdppg.Append(LIBPATH=['ppg-yaml/bin/Debug', 'ppg-yaml/vendor/pg-core/bin/Debug']) # this is a path relative to /modules/gdppg/

env_gdppg.Append(LIBPATH=['#modules/gdppg/ppg-yaml/lib', '#modules/gdppg/ppg-yaml/vendor/ppg-core/bin/Debug']) # this is a path relative to /modules/gdppg/

#env.Append(LIBS=["PPG.lib", "yaml-cpp.lib", "PPG-YAML.lib"])
# Workaround because scons wants to add the extension .windows.tools.x64.lib
env_gdppg.Append(LINKFLAGS=["PPG.lib", "yaml-cpp.lib", "PPG-YAML.lib"])

env_gdppg.Append(CXXFLAGS=['-std=c++0x']) # Flags for C++ code only
