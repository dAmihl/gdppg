# SCsub
Import('env')

# env_gdppg.Append(LIBPATH=['#modules/gdppg/ppg-yaml/lib', '#modules/gdppg/ppg-yaml/vendor/ppg-core/bin/Debug']) # this is a path relative to /modules/gdppg/
#env.Append(LIBS=['PPG.lib', 'yaml-cpp.lib', 'PPG-YAML.lib'])
#env.Append(LIBS=["PPG.lib", "yaml-cpp.lib", "PPG-YAML.lib"])
# Workaround because scons wants to add the extension .windows.tools.x64.lib
#env_gdppg.Append(LINKFLAGS=["PPG.lib", "yaml-cpp.lib", "PPG-YAML.lib"])


module_env = env.Clone()
# Add all cpp files to the build
module_env.add_source_files(env.modules_sources, "*.cpp") 
# this is a path relative to /modules/gdppg/
module_env.Append(CPPPATH = 'ppg-yaml/vendor/ppg-core/src')
module_env.Append(CPPPATH = 'ppg-yaml/src')
module_env.Append(CPPPATH = 'ppg-yaml/vendor/yaml-cpp/include')
# this is a path relative to /modules/gdppg/
module_env.Append(LIBPATH = '#ppg-yaml/bin/Debug')
module_env.Append(LIBPATH = '#ppg-yaml/vendor/ppg-core/bin/Debug')

module_env.Append(LINKFLAGS='yaml-cpp.lib')
module_env.Append(LINKFLAGS='PPG.lib')
module_env.Append(LINKFLAGS='PPG-YAML.lib')

